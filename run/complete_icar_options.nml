!---------------------------------------------------------
!   Model and run meta-data
!---------------------------------------------------------
&model_version
    version = "2.1",                      ! This must match the version of the compiled code
    comment = "Add your comment here"     ! This will be stored in output files
/

!---------------------------------------------------------
!   Model levels specification (may be optional, but should be specified)
!---------------------------------------------------------
&z_info
    ! use dz_levels as a guide but allow dz to vary in space so that z is constant in space at flat_z_height
    ! note spatially varying dz does not work well with linear_theory, use with wind=2 more options coming soon
    ! space_varying = .False.
    !   height at which the z coordinate value should be constant in space (if space_varying=True), if < 0 make the model top flat (computed as sum(dz_levels) + mean(terrain))
    ! flat_z_height = -1


    !   compensate for varying dz in advection, effectively speeding up air through smaller dz windows. This should be true with the new advection scheme (as of 2020-10)

    ! fixed_dz_advection = .True.

    ! Use a SLEVE vertical coordinate, where the decay of the large- and small-scale terrain influence towards model top is controlled by the
    !   decay_rate_L_topo and decay_rate_S_topo respectively (=H/s1 and H/s2), and the exponential factor n that controls compression across the z column.
    !   For higher n values, the terrain compression happens more in the mid to upper z levels (but always below flat_z_height),
    !   whereas for n=1 it is mainly at the lower levels, which may cause numerical issues if these are very thin. By setting s1=s2 a standard hybrid coordinate is obtained.
    !   For many atmospheric applications it appears optimal to choose s1 ~10 km and, subsequently, to minimize s2     for a specified value of gamma > 0"

    sleve = .True.
    terrain_smooth_windowsize = 4    ! Terrain is smoothed to obtain the large-scale terrain features
    terrain_smooth_cycles = 5
    decay_rate_L_topo = 2
    decay_rate_S_topo = 6
    sleve_n = 1.35

    !   Option to use the difference between forcing (lo-res) and hi-res terrain for terrain induced wind speedup (wind=2)
    use_terrain_difference = .True.

    !   Sample model level thickness [m]  Bottom levels could be thicker.
    !   NB: if using gfortran put all on one line
    dz_levels = 50.,   75.,  125.,  200.,  300.,  400.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,    ! 1-20
               500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.,  500.     ! 20-40

/

!---------------------------------------------------------
!   Specify output and restart files and output frequencies
!---------------------------------------------------------
&output_list
    ! this is a list of variable names to be written in each output file
    names = "u","v","ta2m","hus2m", "precipitation", "swe"

    ! These are the options for output variables.  Though they will only be output if they are computed internally
    ! "u", "v", "w_grid", "w",
    ! "ivt", "iwv", "iwl", "iwi"
    ! "nsquared", "pressure", "pressure_i", "psfc",
    ! "potential_temperature", "temperature",
    ! "qv", "qc", "nc", "qi", "ni", "qr", "nr", "qs", "ns", "qg", "ng",
    ! "precipitation", "cu_precipitation", "snowfall", "graupel",
    ! "exner", "density", "z", "z_i", "dz", "dz_i",
    ! "clt", "rsds", "rlds", "rlus",
    ! "ta2m", "hus2m", "v10m", "u10m", "ts",
    ! "hfss", "hfls", "hfgs", "vegetation_fraction", "veg_type", "lai", "surface_roughness",
    ! "canopy_water", "swe", "soil_water_content", "soil_column_total_water", "soil_temperature", "soil_deep_temperature",
    ! "land_mask", "terrain", "lat", "lon", "u_lat", "u_lon", "v_lat", "v_lon"

    !additional output variable options for NoahMP (check default_output_metadata for complete list)
    ! "snowfall_ground","rainfall_ground","snow_temperature","snow_layer_depth","snow_layer_ice",
    ! "snow_layer_liquid_water","canopy_ice","canopy_liquid","snow_height",
    ! "snow_nlayers","eq_soil_moisture",
    ! "smc_watertable_deep","recharge","recharge_deep","evap_canopy","evap_soil_surface",
    ! "transpiration_rate","ground_surf_temperature","runoff_surface","runoff_subsurface"

    !! additional output variable options for water_lake
    ! "t_lake3d" , "lake_icefrac3d", "snl2d", "t_grnd2d",lake_icefrac3d,z_lake3d,dz_lake3d,t_soisno3d,h2osoi_ice3d
    ! ,h2osoi_liq3d,h2osoi_vol3d ,z3d,dz3d,watsat3d,csol3d,tkmg3d,lakemask,zi3d,tksatu3d,tkdry3d,lakedepth2d

    outputinterval = 3600   ! number of seconds between output time slices
    output_file = "output/icar_out_"    ! prefix name of output file (date will be appended)
    ! output_file_frequency = "monthly"   ! eventually this will be used to specify how frequently to create new files (not implemented yet)

    ! note that restart files will have ALL variables so that they can be used to restart ICAR
    restartinterval = 24    ! number of outputs to skip restarts on
    restart_file = "restart/icar_rst_"    ! prefix name of restart file (date will be appended)
/


!---------------------------------------------------------
!   Specify physics options to use for the model run
!---------------------------------------------------------
&physics
    ! Common precipitation downscaling run use pbl=0 lsm=0 mp=1 rad=0 conv=0 adv=1 wind=1
    ! For a FASTER run (simpler physics), set mp=2
    ! If surface air temperature is important use pbl=2 lsm=4 rad=3 water=3 this requires Noah MP and lake data
    ! N/A = Not Available or Not fully implemented
    ! Warning, convection can be unstable.
    ! wishlist = No Code Present yet

    ! Planetary Boundary Layer Scheme
    pbl = 0,  ! 1=legacy (deprecated)      2=Simple (Local HP96)        3=YSU (work in progress)

    ! Land Surface Model
    lsm = 0,  ! 1=use prescribed fluxes    2=Simple LSM (N/A)           3=Noah LSM                  4=NoahMP

    ! Open water fluxes
    water=0,  ! 1=use prescribed (w/lsm=1) 2=Simple sea surface fluxes  3=Lake model (simple ocean)

    ! Microphysics Scheme
    mp  = 1,  ! 1=Thompson                 2=Simple (SB04)              3=Morrison                  4=WSM6      5=Thompson-Eidhammer    6=WSM3
    ! Radiation Scheme
    rad = 0,  ! 1=use prescribed fluxes    2=Simple (empirical)         3=RRTMG

    ! Convection / Cumulus Scheme
    conv= 0,  ! 1=Tiedke Scheme            2=Simple Scheme (wishlist)   3=Kain-Fritsch              4=NSAS      5=BMJ

    ! Advection Scheme
    adv = 1,  ! 1=Upwind                   2=MPDATA                     3=Runga-Kutta (in progress?)

    ! Wind field calculations
    wind= 1   ! 1=Linear Theory            2=grid based,mass-conserving 3=iterative wind solver     4=implicit(in progress)  5=linear+iterative
/

!---------------------------------------------------------
!   Files to be used by the run
!---------------------------------------------------------
&files_list
    !   This is the high-resolution input filename
    !   primary inputs from this file are lat, lon, and terrain, optionally soil and veg types
    init_conditions_file="baseline/geo_4km_conus.nc",

    !   This is a list of the boundary conditions files number of files must match nfiles variable above
    boundary_files= "forcing/wrfout_d01_2001-04-01_03:00:00", "forcing/wrfout_d01_2001-06-30_03:00:00"

    !   This is a list of the external conditions files to be used for starting the model. Need to have same grid (!)
    ! external_files= "swe_t3_CH_2D.nc"
    external_files = "/scratch/snx3000/bkruyt/extraction_cosmo1/NC_INIT/laf2019030600.nc"

    !   Alternatively a separate file containing one forcing file name per line may be specified
    !   This file may be generated by :
    !       ls -1 forcing/* | sed 's/$/"/g;s/^/"/g'>file_list.txt
    !   sed is used to add " around the filename.
    !   The quotes are probably only necessary if there are special characters or spaces on the line
    ! forcing_file_list = "file_list.txt"

    !   Files to read "calibration" data from
    ! nsq_calibration_file = "nsq_calibration.nc",
    ! linear_mask_file = "linear_weights.nc"
/

!---------------------------------------------------------
!   Main List of Parameters
!---------------------------------------------------------
&parameters
    !   Set this to the starting date of the first low-resolution forcing file
    forcing_start_date = '2001-04-01 03:00:00',
    !   Set this to the date to start running the model (defaults to the forcing_start_date)
    start_date = "2001-04-02 00:00:00",
    !   Set this to the date to stop running the model
    end_date = "2001-04-10 00:00:00",
    !   Calendar used by the forcing data "gregorian", "standard", "noleap", "365-day", "360-day"
    calendar = "standard",

    !   The length of an input forcing time step
    inputinterval = 3600,   ! [s]

    !   The output interval
    outputinterval = 10800,  ! [s]
    !   The number of outputintervals (frames) that are written to one output file.
    frames_per_outfile = 24

    !   Limit output data to near surface variables
    !   WARNING if true it is impossible to restart the run (for now)
    ! surface_io_only = False,

    !   The grid spacing of the high-resolution data
    dx = 4000.0,        ! [m]

    ! Specify the longitude coordinate system to use 0 = (default) don't change inputs, 1 = -180 to 180, 2 = 0 to 360, 3 = guess an appropriate value
    longitude_system = 0  ! [0,1,2,3]

    !   The approximate grid spacing of the forcing data
    !   only used in rm_linear_winds?
    ! dxlow = 20000.0,    ! [m]

    !   Read dz from the namelist file (below)
    readdz = True,

    !   The number of vertical levels to run (suggest ~10-30 levels with a model top around 4-8km)
    !   this is now optional, if not supplied, ICAR will determine it from the number of levels specified
    !   if it is supplied it must be less than or equal to the number of levels specified below
    !   but it can be used to subset the number of levels used.
    !   WARNING : ICAR can be surprisingly sensitive to this parameter see Horak et al 2019 and 2020
    nz = 15, ! []

    !   Set this to true of the zvar in the input data is actually in units of geopotential height (m/s^2)
    z_is_geopotential = False,
    !   Set this to true of the zvar in the input data is specified on model interfaces (as WRF geopotential height is)
    z_is_on_interface = False,
    !   Specify that the height of the forcing data will change through the simulation (common for atmospheric model-level output)
    time_varying_z = True,
    !   Use height above ground layer to interpolate the wind field instead of height above sea level.
    use_agl_height = False,
    agl_cap = 300, !  height up to which AGL height is used for vertical interpolation (default = 300m)

    !   Multiplier on CFL number to increase stability if unstable (make it <1 to increase stability, >1 to increase model speed)
    ! cfl_reduction_factor = 1.0  ! default=0.9

    !   CFL method/strictness settings:
    !   1 = max(1D winds)*sqrt(3), 2=max(1D,ave.3D)*sqrt(3), 3=max(sum.3D), 4=max(sum.3D)*sqrt(3), 5=sum(max.3d)
    !   Note that 4 is probably the safest, but 3 has always been stable and is left as the default.
    !   5 is the value that used to be used.
    !   Simulations with 4 will run 1.7x slower.
    ! cfl_strictness = 3

    !   If the forcing data come from WRF, the temperature data probably have an offset applied
    !   t_offset will be added to the forcing temperature data.  Defaults to 0
    ! t_offset = 300, ! [K]

    ! limit to impose on relative humidity in the forcing data in case some weird values (e.g. 200% RH) are present
    rh_limit = 1.2    ! [ fractional ]

    ! limit to impose on externally supplied convective precipitation in the forcing data in case bad values (e.g. 1e10 mm) are present
    cp_limit = 500    ! [ mm/hr ]

    ! limit to impose on minimum SST in the forcing data in case any non-sensical values (e.g. 200 K) are present
    sst_min_limit = 273    ! [ k ]


    !   If the temperature field in the forcing data is not potential temperature, then set this flag to False
    ! t_is_potential = .True.

    !   If the water vapor field in the forcing data is specific humidity instead of mixing ratio, then set this flag to true.
    ! qv_is_spec_humidity = .False.
    !   If the water vapor field in the forcing data is relative humidity instead of mixing ratio, then set this flag to true.
    ! qv_is_relative_humidity = .False.

    !   Distance to smooth winds over [m] ~100000 is reasonable
    !   larger values result in less large scale convergence/divergence in the flow field
    !   smaller value result in more and can destroy orographic precip and result in odd spatial coherence
    !   depending on the forcing data resolution. At a minimum, this should be ~dxlow
    smooth_wind_distance = 72000, ! [m]

    !   To run an ideal simulation in which the boundary conditions are held constant
    ! ideal = false,
    !   To use an externally supplied high-resolution wind field (ignore)
    ! external_winds = false,
    !   Number of external wind files (ignore)
    ! n_ext_winds = 1,  ! [n-files]
    !   Run with a horizontally averaged wind field
    ! mean_winds = false,
    !   Run with a horizontally averaged boundary conditions
    ! mean_fields = false,

    !   Use this to restart the model restart_info must be supplied below
    restart = false,

    !   Use density in the advection step (violates linear theory assumptions)
    advect_density = false,

    !   Increases output print at runtime and tests domain wide values for realistic values throughout the simulation.
    debug = false,
    warning_level = 4, ! 0-10 increases the level of errors it warns about and quits over (slightly)

    ! controls printing of % completed for longer processes.  Nice if it is running in a console, not nice in a log file.
    interactive=False

    !   If the following are true, their respective namelists (below) will also be read in.
    !   Read parameters for advection
    use_adv_options = true
    !   Read parameters for linear theory
    use_lt_options = true
    !   Read parameters for microphysics (primarily thompson only at this point)
    use_mp_options = true
    !   Read parameters for land surface model
    use_lsm_options = true
    !   Read parameters for radiation model
    use_rad_options = true
    !   Read parameters for online bias correction
    use_bias_correction = false
    !   Read parameters for experimental blocked flow parameterization
    use_block_options = false

    use_cu_options = false
/

!---------------------------------------------------------
!   Specification of variable names in input files
!---------------------------------------------------------
&var_list
    ! These are the names of the variables in the forcing data files
    ! variables on the mass / center grid
    time_var= "time",       ! Time                      [defined in netcdf attributes] OPTIONAL
    latvar  = "XLAT",       ! latitude                  [degrees]
    lonvar  = "XLONG",      ! longitude                 [degrees]
    pvar    = "P",          ! pressure                  [Pa]
    pbvar   = "PB",         ! base pressure state       [Pa]        OPTIONAL
    tvar    = "T",          ! temperature               [K]   (with optional offset)
    qvvar   = "QVAPOR",     ! water vapor mixing ratio  [kg/kg]
    qcvar   = "QCLOUD",     ! cloud water mixing ratio  [kg/kg]     OPTIONAL
    qrvar   = "QRAIN",      ! rain water mixing ratio   [kg/kg]     OPTIONAL
    qsvar   = "QSNOW",      ! snow mixing ratio         [kg/kg]     OPTIONAL
    qnrvar  = "QNRAIN",     ! rain number concentration [kg^-1]     OPTIONAL
    qgvar   = "QGRAUP",     ! graupel mixing ratio      [kg/kg]     OPTIONAL
    qnivar  = "QNICE",      ! ice number concentration  [kg^-1]     OPTIONAL
    qivar   = "QICE",       ! cloud ice mixing ratio    [kg/kg]     OPTIONAL
    hgtvar  = "HGT",        ! surface elevation         [m]
    zvar    = "PH",         ! model level elevations    [m or m/s^2 if z_is_geopotential]
    zbvar   = "PHB",        ! base height state         [m or m/s^2] OPTIONAL
    sst_var = "TSK"         ! Water surface temperature [K]          OPTIONAL (used with water=2)

    ! WARNING, if U and V are "grid relative" (e.g. output from WRF) and on a skewed grid, this will cause problems
    ! run the helpers/wrf2icar.sh script first to rotate the wind field to be east-west, north-south relative or supply sinalpha cosalpha... this may be broken
    ! variables on the ew staggered (U) grid
    uvar    = "U",          ! East-West wind speed      [m/s]

    ! variables on the NS staggered (V) grid
    vvar    = "V",          ! North-South wind speed    [m/s]

    ! these are only used with lsm=1 (pbl should also be >0)
    ! shvar = "HFX",        ! sensible heat flux        [W/m^2]
    ! lhvar = "LH",         ! latent heat flux          [W/m^2]

    ! for lsm=1,pbl=1
    ! pblhvar = "PBLH",     ! Planetary boundary layer height [m]

    ! Radiative fluxes at the surface required with physics:rad=1
    swdown_var = "SWDOWN",  ! Shortwave down            [W/m^2]
    lwdown_var = "GLW",     ! Longwave down             [W/m^2]

    ! only required for some physics code (Noah LSM, water, Tiedke, KF(?))
    landvar = "LANDMASK",          ! land-water mask (as in WRF) 1=land, 0 or 2=water
    lakedepthvar = "LAKE_DEPTH",   ! depth of the lake [m]

    ! NOTE, these variables should be in the high-resolution initial conditions netcdf file
    lat_hi  = "XLAT_M",     ! latitude  (mass grid)         [degrees]
    lon_hi  = "XLONG_M",    ! longitude (mass grid)         [degrees]
    ulat_hi = "XLAT_U",     ! latitude  (ew-staggered grid) [degrees]
    ulon_hi = "XLONG_U",    ! longitude (ew-staggered grid) [degrees]
    vlat_hi = "XLAT_V",     ! latitude  (ns-staggered grid) [degrees]
    vlon_hi = "XLONG_V",    ! longitude (ns-staggered grid) [degrees]
    hgt_hi  = "HGT_M"       ! surface elevation             [m]

    ! used to rotate E-W/N-S wind fields into the ICAR high-res domain
    ! sinalpha_var="SINALPHA"
    ! cosalpha_var="COSALPHA"


    ! to use the Noah LSM the following fields should also be specified on the high-res grid
    ! vegtype_var    = "IVGTYP",    ! vegetation type index (classification to match VEGPARM.TBL file)
    ! vegfrac_var    = "VEGFRA",    ! vegetation cover fraction
    ! soiltype_var   = "ISLTYP",    ! soil type index (classification to match SOILPARM.TBL file)
    ! soil_deept_var = "SOILTEMP",  ! deep soil temperature         [K]
                                    ! if soil_t_var is not specified this is used
                                    ! throughout the soil column, not just at the bottom.
    ! soil_t_var   = "TSLB",        ! soil temperature (4 levels)   [K]
    ! soil_vwc_var = "SMOIS",       ! soil water content (4 levels) [m^3/m^3]

    ! to use the NoahMP LSM, the following additional fields must be specified or default values will be applied
    !vegfracmax_var = "VEGMAX", ! maximum annual vegetation fraction (default = 0.8)
    !lai_var = "LAI",           ! leaf area index (default = 1)
    !canwat_var = "CANWAT",     ! total canopy water (liquid + ice) (default = 0)

    ! variables to read from calibration files, both default to "data"
    ! nsq_calibration_var = "data",
    ! linear_mask_var = "data"

    ! variables to read from optional external_start_file(s)
    lat_ext      =  "lat_1",        !
    lon_ext      =  "lon_1",        !
    swe_ext      =  "W_SNOW"        !
    rho_snow_ext =  "RHO_SNOW"      !
    ! tsoil2D_ext  =  "T_SO"        ! N.B. This will overwrite any input from soil_t_var or soil_deept_var  !!
    tsoil3D_ext  =  "T_SO"          ! N.B. This will overwrite any input from soil_t_var or soil_deept_var  !!
/

!---------------------------------------------------------
!  Optionally specified radiation parameters
!---------------------------------------------------------
&rad_parameters
   update_interval_rrtmg=1800
   icloud=3
   read_ghg=.True.
   use_simple_sw=True
/

!---------------------------------------------------------
!   Optionally specified Microphysics parameters (mostly for Thompson)
!---------------------------------------------------------
&mp_parameters
    update_interval = 0  ! maximum update interval allowed
                         ! MP only updated when this interval will be exceeded in the next step

    Nt_c  = 100.e6      !  50, 100,500,1000
    TNO   = 5.0         !  0.5, 5, 50
    am_s  = 0.069       ! 0.052 (Heymsfield), 0.02 (Mitchell), 0.01.
                        ! Note that these values are converted to mks units. Was given as cgs units in Morrison p3 code
    rho_g = 500.0       ! 800, 500, 200
    av_s  = 40.0        ! 11.72 (Locatelli and Hobbs)
    bv_s  = 0.55        ! 0.41
    fv_s  = 100.0       ! 0
    av_g  = 442.0       ! 19.3   from "Cloud-Resolving Modelling of Convective Processes, by Gao and Li,
    bv_g  = 0.89        ! 0.37
    av_i  = 1847.5      ! 700 (Ikawa and Saito)
    Ef_si = 0.05
    Ef_rs = 0.95        ! 1
    Ef_rg = 0.75        ! 1
    Ef_ri = 0.95        ! 1
    C_cubes = 0.5       ! 0.25 Based on Thesis paper "Validation and Improvements of Simulated
                        !      Cloud Microphysics and Orographic Precipitation over the Pacific Northwest"
    C_sqrd  = 0.3
    mu_r    = 0.        ! 1, 2, 5
    t_adjust= 0.0       ! -5, 10, 15
    Ef_rw_l = .False.   ! True sets ef_rw = 1, insted of max 0.95
    Ef_sw_l = .False.   ! True sets ef_rw = 1, insted of max 0.95

    top_mp_level = 0    ! if <=0 stop that many levels below the model top
    local_precip_fraction = 1.0 ! Fraction of micrphysics derived precipitation to deposit in the local grid cell
                                ! the remaining precip is distributed to the surrounding grid cells.
/


!---------------------------------------------------------
!   Optionally specified convection parameters
!---------------------------------------------------------
&cu_parameters
    stochastic_cu = 0            ! disturbes the W field (randomly; higher value=more disturbance). Triggers convection.
    tendency_fraction = 1.0      ! scales the q[v/c/i]/th fractions (relative to 1). Lower values lead to more cu_precip.
    tend_qv_fraction = 1.0
    tend_qc_fraction = 1.0
    tend_th_fraction = 1.0
    tend_qi_fraction = 1.0
/

!---------------------------------------------------------
!   Optionally specified advection parameters (only used by MPDATA right now)
!---------------------------------------------------------
&adv_parameters
    flux_corrected_transport = true ! Use a flux correction in the transport calculations to prevent ringing and overshoots
                                    ! this should keep MPDATA stable enough for use with the linear winds

    mpdata_order = 2                ! Int: Closure order to use (IORD in MPDATA papers)
                                    ! order=1 equivalent to simple upwind
                                    ! order=2 is standard MPDATA
                                    ! order>2 is a higher order correction that will be very expensive with relatively little gain

    boundary_buffer = False         ! smooth a one grid cell buffer around the boundary
                                    ! to avoid ringing artifacts in non-flux-corrected advection
                                    ! better just to use flux correction as it may crash without it.
/

!---------------------------------------------------------
!   Optionally specified land surface model parameters (mostly for Noah)
!---------------------------------------------------------
&lsm_parameters
    update_interval = 300             ! Int : Seconds to wait before updating land surface fluxes again (default=300)

    LU_Categories = "MODIFIED_IGBP_MODIS_NOAH"   ! Land Use Category definitions
                                    ! Note, this must match a category in VEGPARM.TBL and correspond to
                                    ! the values stored in vegtype_var in the hi-res input var (default="MODIFIED_IGBP_MODIS_NOAH")
                                    ! common values are USGS, USGS-RUC, MODI-RUC, and NLCD40

    monthly_vegfrac = true            ! read / use a 12 month phenology of vegetation fraction

    ! These all default to values defined in common LU_Categories
    ! urban_category = -1             ! Int: index that defines the urban category in LU_Categories
    ! ice_category   = -1             ! Int: index that defines the ice category in LU_Categories
    ! water_category = -1             ! Int: index that defines the water category in LU_Categories
    ! lake_category  = -1             ! Int: index that defines the lake(s) category in LU_Categories

    lh_feedback_fraction = 1.0        ! fraction of latent heat to feed into the atmosphere to increase water vapor
    sh_feedback_fraction = 0.625      ! fraction of sensible heat to feed into the atmosphere to increase temperature
    sfc_layer_thickness  = 400.0      ! thickness of lower atmosphere to spread LH and SH fluxes over [m]
    dz_lsm_modification  = 0.5        ! multiplier on dz thickness in call to NoahMP, significantly improves ta2m
    wind_enhancement = 1.5            ! factor to increase wind speeds passed to NoahMP to account for biases in driving model and improve surface fluxes
/


!---------------------------------------------------------
!   Optionally specified Linear Theory parameters
!---------------------------------------------------------
&lt_parameters
    buffer = 200                    ! The number of grid cells of buffer to use around the topography for the fft calculations
    stability_window_size = 20      ! The number of grid cells in all directions to average Nsq over for variable_N
    vert_smooth = 20,               ! The number of vertical levels to look up and down when calculating brunt vaisalla frequency
    smooth_nsq = .True.,            ! set to true to provide additional vertical smoothing of Nsq within spatial_linear_winds
    max_stability = 6e-4            ! The maximum Brunt-Vaisalla frequency to allow
    min_stability = 1e-7            ! The minimum Brunt-Vaisalla frequency to allow

    ! If you want to run with a constant BV instead of a time varying one, it can be set here (and set variable_N to false)
    ! NOTE this will be used for the dry BV,  moist will be dry/10
    ! N_squared = 3.0e-5            ! set this to use a fixed brunt-vaisalla frequency in linear wind calculations
    variable_N = true,              ! use a time varying Nsq (e.g. calculate it from the data don't use the above fixed value)
    linear_update_fraction = 0.5    ! set this to the fraction of the current linear calculation to add to a time-varying perturbation
                                    ! setting to 1 means that waves form instantly, setting it to 0 means they will never form
                                    ! anything in between is the contribution from the current input forcing time step thus it should
                                    ! change if inputinterval changes.

    ! linear_contribution = 1.0,    ! set this to the fraction of the linear perturbation you wish to use (1.0 = full/standard linear field)
    spatial_linear_fields = true,   ! use a spatially variable wind field when calculating the linear wind field

    ! NOTE THIS uses a fixed Nsq, not the value specified here yet
    ! rm_N_squared = 9e-5,          ! set this to use a fixed brunt-vaisalla frequency in linear wind calculations
    ! remove_lowres_linear = false, ! attempt to "remove" the low resolution linear winds from the forcing data
    ! rm_linear_contribution = 0.4, ! fraction of linear perturbation to remove from the low-res wind field (if rm_lowres_linear==true)

    ! Used to test possible model calibration... not sure what these will do longer term.
    ! To use these, you must also specify a filename and variable name to be read in for these fields.
    ! nsq_calibration = false,
    ! linear_mask = false,

    ! Linear theory Look Up Table generation parameters
    ! NOTE: if you have memory problems running the model, decrease the n_X_values below
    ! direction ranges and number of bins
    dirmax = 6.283185307 ! 2*pi
    dirmin = 0
    n_dir_values = 36

    ! wind speed ranges and number of bins
    spdmax = 30
    spdmin = 0
    n_spd_values = 10

    ! BV frequency ranges (in log space) and number of bins
    nsqmax = -7.42  ! ln(6e-4) defaults to ln(max_stability)
    nsqmin = -16.12 ! ln(1e-7) defaults to ln(min_stability)
    n_nsq_values = 10

    ! Minimum thickness of a layer to permit when computing the LUT.
    ! If a model layer is thicker than this, it is divided evenly into sub
    ! steps such that each substep is <= minimum_layer_size
    minimum_layer_size = 100.0

    ! NOTE: this look up table requires a LOT of RAM.  (and you still need some for the rest of the model)
    !   Calculate bytes of RAM required as nx * ny * nz * n_dir * n_spd * n_nsq * 2 * 4
    !   e.g. 320 * 250 * 14 * 36 * 10 * 10 * 2 * 4 = 30GB!
    !   (* 2 is for having to store U and V)
    !   (* 4 is for the number of bytes per float)

    ! To speed up model initialization, the look up table can be saved to disk (write_LUT=True)
    ! On the next run, the LUT can be read back in (read_LUT=True).
    ! Error checking will be performed and if the attributes above, or the spatial domain
    ! used to generate the LUT does not match the values for the current run it will regenerate the LUT.
    read_LUT  = True    ! read the Look up table from a specified file
    write_LUT = True    ! write the look up table to the specified file
    LUT_filename = "Linear_Theory_LUT.nc"
/


!---------------------------------------------------------
!   Optionally Parameters for online bias correction
!---------------------------------------------------------
&bias_parameters
    ! name of the netcdf input file containing bias correction inputs
    bias_correction_filename = ""

    ! name of variable in netcdf file that defines a multiplier for precipitation at each grid point
    ! variable can have a 12-month time dimension to permit seasonality
    ! to the bias correction. Data should represent the ratio between ICAR precipitation and Observations
    ! e.g. icar / obs
    rain_fraction_var = ""
/

!---------------------------------------------------------
!   Optionally Parameters for highly experimental blocked flow parameterization
!---------------------------------------------------------
&block_parameters
    blocking_contribution   = 0.5       ! fractional contribution of flow blocking perturbation that is added [0-1]
    smooth_froude_distance  = 6000      ! distance (m) over which Froude number is smoothed
    n_smoothing_passes      = 3         ! number of times the smoothing window is applied
    block_fr_max            = 0.75      ! max froude no at which flow is only partially blocked above, no blocking
    block_fr_min            = 0.5       ! min froude no at which flow is only partially blocked below, full blocking
    block_flow              = .False.   ! use the blocking parameterization
/


!---------------------------------------------------------
!   Optionally specified Restart information
!
!   NOTE: If the (original) output file corresponding to the restart time is not removed before restarting, its 'time:units' parameter (i.e.
!    time:units = "days since 2000-01-01 00:00:00") - is not overwritten, resulting in wrong timestamp for that first file after restart.
!   CURE: remove output files of the restart time from initial simulation before restarting. Or use the fix_icar_time.py script in icar/helpers/
!
!---------------------------------------------------------
&restart_info
    ! file to read for initial conditions (an ICAR output file will work)
    restart_file = "restart/icar_1990_09_30_01-01.nc",

    ! date to start from, used to calculate position in both restart file and forcing file
    restart_date =  1990, 9, 30, 23, 0, 0
/
